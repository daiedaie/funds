package com.mrbt.oa.mvc.vo.company;

import com.mrbt.oa.mvc.vo.BaseExample;
import java.util.ArrayList;
import java.util.List;

public class MrbtCompanyDepartExample extends BaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public MrbtCompanyDepartExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDpNameIsNull() {
            addCriterion("DP_NAME is null");
            return (Criteria) this;
        }

        public Criteria andDpNameIsNotNull() {
            addCriterion("DP_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andDpNameEqualTo(String value) {
            addCriterion("DP_NAME =", value, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameNotEqualTo(String value) {
            addCriterion("DP_NAME <>", value, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameGreaterThan(String value) {
            addCriterion("DP_NAME >", value, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameGreaterThanOrEqualTo(String value) {
            addCriterion("DP_NAME >=", value, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameLessThan(String value) {
            addCriterion("DP_NAME <", value, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameLessThanOrEqualTo(String value) {
            addCriterion("DP_NAME <=", value, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameLike(String value) {
            addCriterion("DP_NAME like", value, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameNotLike(String value) {
            addCriterion("DP_NAME not like", value, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameIn(List<String> values) {
            addCriterion("DP_NAME in", values, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameNotIn(List<String> values) {
            addCriterion("DP_NAME not in", values, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameBetween(String value1, String value2) {
            addCriterion("DP_NAME between", value1, value2, "dpName");
            return (Criteria) this;
        }

        public Criteria andDpNameNotBetween(String value1, String value2) {
            addCriterion("DP_NAME not between", value1, value2, "dpName");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("PARENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("PARENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualTo(Integer value) {
            addCriterion("PARENT_ID =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualTo(Integer value) {
            addCriterion("PARENT_ID <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThan(Integer value) {
            addCriterion("PARENT_ID >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PARENT_ID >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThan(Integer value) {
            addCriterion("PARENT_ID <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualTo(Integer value) {
            addCriterion("PARENT_ID <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdIn(List<Integer> values) {
            addCriterion("PARENT_ID in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotIn(List<Integer> values) {
            addCriterion("PARENT_ID not in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdBetween(Integer value1, Integer value2) {
            addCriterion("PARENT_ID between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PARENT_ID not between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andRouteIdIsNull() {
            addCriterion("ROUTE_ID is null");
            return (Criteria) this;
        }

        public Criteria andRouteIdIsNotNull() {
            addCriterion("ROUTE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andRouteIdEqualTo(String value) {
            addCriterion("ROUTE_ID =", value, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdNotEqualTo(String value) {
            addCriterion("ROUTE_ID <>", value, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdGreaterThan(String value) {
            addCriterion("ROUTE_ID >", value, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdGreaterThanOrEqualTo(String value) {
            addCriterion("ROUTE_ID >=", value, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdLessThan(String value) {
            addCriterion("ROUTE_ID <", value, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdLessThanOrEqualTo(String value) {
            addCriterion("ROUTE_ID <=", value, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdLike(String value) {
            addCriterion("ROUTE_ID like", value, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdNotLike(String value) {
            addCriterion("ROUTE_ID not like", value, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdIn(List<String> values) {
            addCriterion("ROUTE_ID in", values, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdNotIn(List<String> values) {
            addCriterion("ROUTE_ID not in", values, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdBetween(String value1, String value2) {
            addCriterion("ROUTE_ID between", value1, value2, "routeId");
            return (Criteria) this;
        }

        public Criteria andRouteIdNotBetween(String value1, String value2) {
            addCriterion("ROUTE_ID not between", value1, value2, "routeId");
            return (Criteria) this;
        }

        public Criteria andDpStatusIsNull() {
            addCriterion("DP_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andDpStatusIsNotNull() {
            addCriterion("DP_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andDpStatusEqualTo(Integer value) {
            addCriterion("DP_STATUS =", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusNotEqualTo(Integer value) {
            addCriterion("DP_STATUS <>", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusGreaterThan(Integer value) {
            addCriterion("DP_STATUS >", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("DP_STATUS >=", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusLessThan(Integer value) {
            addCriterion("DP_STATUS <", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusLessThanOrEqualTo(Integer value) {
            addCriterion("DP_STATUS <=", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusIn(List<Integer> values) {
            addCriterion("DP_STATUS in", values, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusNotIn(List<Integer> values) {
            addCriterion("DP_STATUS not in", values, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusBetween(Integer value1, Integer value2) {
            addCriterion("DP_STATUS between", value1, value2, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("DP_STATUS not between", value1, value2, "dpStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated do_not_delete_during_merge Thu May 12 15:09:23 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MRBT_COMPANY_DEPART
     *
     * @mbggenerated Thu May 12 15:09:23 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}